#!/usr/bin/env bash

export CONFIG_LOADED=true

# Configuration file for script/install and script/update
# These settings are stored so that the scripts can be called without prompting for settings everytime the scripts are executed.

# the following variables can be altered manually, or a new install.cfg can be generated using script/install/config.bash

# Nginx/Server configuration
export SERVER_NAME=${SERVER_NAME}
export APP_NAME=${APP_NAME}

# Rails environment that will be used to run this installation
export RAILS_ROOT=${RAILS_ROOT}
export APP_USER=${APP_USER} # user this app will run under
export APP_GROUP=${APP_GROUP} # group this app will run under
export RAILS_ENV=${RAILS_ENV} # development or production

# Unicorn
export UNICORN_PORT=${UNICORN_PORT} # port unicorn listens on (production)

# Database
export DATABASE=${DATABASE} # database name
export TEST_DATABASE=${TEST_DATABASE} # test database name
export DATABASE_USERNAME=${DATABASE_USERNAME} # username to access database
# TODO if required: database host, port, pool, ...

# Redis database
export REDIS_HOST=${REDIS_HOST}
export REDIS_PORT=${REDIS_PORT}
export REDIS_PASS=${REDIS_PASS}
export REDIS_INSTALL=${REDIS_INSTALL}

# Backups
export SCHEDULE_BACKUPS=${SCHEDULE_BACKUPS}
export BACKUP_RSYNC=${BACKUP_RSYNC}
export BACKUP_RSYNC_MODE=${BACKUP_RSYNC_MODE}
export BACKUP_RSYNC_PORT=${BACKUP_RSYNC_PORT}
export BACKUP_RSYNC_HOST=${BACKUP_RSYNC_HOST}
export BACKUP_RSYNC_USER=${BACKUP_RSYNC_USER}
export BACKUP_RSYNC_PASS=${BACKUP_RSYNC_PASS}
export BACKUP_RSYNC_SSH_KEY=${BACKUP_RSYNC_SSH_KEY}
export BACKUP_RSYNC_PATH="${BACKUP_RSYNC_PATH}"

# Isolate
export ISOLATE_ROOT="${ISOLATE_ROOT}" # path of linux installation for the isolate sandbox
export ISOLATE_CGROUPS="${ISOLATE_CGROUPS}"
export ISOLATE_BRANCH="${ISOLATE_BRANCH}"

